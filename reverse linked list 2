# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        fake_node = ListNode(0, head)
        prev_left = fake_node
        curr = head

        for i in range(left-1):
            prev_left = curr
            curr = curr.next 
        
        prev = None
        for i in range(right - left +1):
            temp = curr.next
            curr.next = prev
            prev = curr
            curr = temp

        prev_left.next.next = curr
        prev_left.next = prev

        return fake_node.next



"""
Time - O(N)
Space - O(1)
"""
