from collections import defaultdict
class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        sum_dict = defaultdict[int]
        prefix_sum = 0
        sum_dict = {0:1}
        count = 0

        for i in range(len(nums)):
            num = nums[i]
            prefix_sum += num
            diff = prefix_sum - k

            if diff in sum_dict:
                count += sum_dict[diff]

            sum_dict[prefix_sum] = sum_dict.get(prefix_sum, 0) + 1

        return count


"""
Time - O(N)
Space - O(N)
"""
