# class MyStack:
#     def __init__(self):
#         self.stack = []
       
#     def push(self, x: int) -> None:
#         self.stack.append(x)

#     def pop(self) -> int:
#         return self.stack.pop()


#     def top(self) -> int:
#         return self.stack[-1]


#     def empty(self) -> bool:
#         return not self.stack




class ListNode():
    def __init__(self, val):
        self.val = val
        self.next = None

class MyStack:
    def __init__(self):
        self.head = None
       
    def push(self, x: int) -> None:
        new_node = ListNode(x)
        if self.head is None:
            self.head = new_node
        else:
            new_node.next = self.head
            self.head = new_node


    def pop(self) -> int:
        val = self.head.val
        self.head = self.head.next
        return val



    def top(self) -> int:
        val = self.head.val
        return val


    def empty(self) -> bool:
        if self.head is None:
            return True
        else:
            return False


"""
Time - O(1)
Space - O(N)
"""
